{"version":3,"file":"static/js/484.31d331af.chunk.js","mappings":"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","sources":["page/Movies/MovieDetails/MovieDetails.styled.jsx","page/Movies/MovieDetails/MovieDetails.jsx","service/tmdbApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  padding: 10px;\n`;\n\nexport const MovieText = styled.div`\n  padding: 100px 50px;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 600;\n  color: #001a00;\n  &.active {\n    color: #a01d1d;\n  }\n`;\n\nexport const MovieItem = styled.li`\n  padding: 10px;\n`;","import {\n  Link,\n  Outlet,\n  useLocation,\n  useParams,\n  \n} from 'react-router-dom';\nimport { movieDetailsApi } from 'service/tmdbApi';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { isEmpty } from 'lodash';\nimport { MovieWrapper, MovieText, MovieList, MovieLink, MovieItem } from './MovieDetails.styled';\n\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movieInfo, setMovieInfo] = useState({});\n\n  const location = useLocation();\n  const goBack = useRef(location.state?.from || '/');\n  \n\n  useEffect(() => {\n    try {\n      movieDetailsApi(movieId).then(res => setMovieInfo(res));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  let source = '';\n  if (!movieInfo.poster_path) {\n    source =\n      'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg';\n  } else source = `https://image.tmdb.org/t/p/w500/${movieInfo.poster_path}`;\n\n  return (\n    <div>\n      <Link to={goBack.current}>Go back ‚Üê</Link>\n      {!isEmpty(movieInfo) && (\n        <>\n          <MovieWrapper>\n            <img src={source} alt=\"poster\" width=\"300px\" />\n            <MovieText>\n              <h1>\n                {movieInfo.title} ({movieInfo.release_date.slice(0, 4)})\n              </h1>\n\n              <p>User score: {Math.round(movieInfo.vote_average * 10) + '%'}</p>\n              <h2>Overview</h2>\n              <p>{movieInfo.overview}</p>\n              <h2>Genres</h2>\n              <p>\n                {movieInfo.genres.length > 0\n                  ? movieInfo.genres.map(genre => genre.name).join(', ')\n                  : 'No information about genres'}\n              </p>\n            </MovieText>\n          </MovieWrapper>\n          <div>\n            <h3>Additional information</h3>\n            <MovieList>\n              <MovieItem>\n                <MovieLink to=\"cast\">Cast</MovieLink>\n              </MovieItem>\n              <MovieItem>\n                <MovieLink to=\"reviews\">Reviews</MovieLink>\n              </MovieItem>\n            </MovieList>\n\n            <Suspense>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\n\n\nexport default MovieDetails;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b2e60f539e48de4827e6e0d51f4baa7c';\n\nexport const getTrending = async () => {\n    const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n    const response = await axios.get(`${BASE_URL}?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const moviesSearch = async query => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n\n  const response = await axios.get(\n    `${BASE_URL}?api_key=${API_KEY}&query=${query}&page=1`\n  );\n\n  return response.data;\n};\n\nexport const movieDetailsApi = async movieId => {\n    const BASE_URL = 'https://api.themoviedb.org/3/movie/'\n  const response = await axios.get(`${BASE_URL}/${movieId}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const movieActors = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/`;\n  const response = await axios.get(\n    `${BASE_URL}/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const movieReviews = async movieId => {\n    const BASE_URL = 'https://api.themoviedb.org/3/movie/'\n    const response = await axios.get(`${BASE_URL}/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n}"],"names":["MovieWrapper","styled","_templateObject","_taggedTemplateLiteral","MovieText","_templateObject2","MovieList","_templateObject3","MovieLink","NavLink","_templateObject4","MovieItem","_templateObject5","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","location","useLocation","goBack","useRef","state","from","useEffect","movieDetailsApi","then","res","error","console","log","source","poster_path","concat","_jsxs","children","_jsx","Link","to","current","isEmpty","_Fragment","src","alt","width","title","release_date","slice","Math","round","vote_average","overview","genres","length","map","genre","name","join","Suspense","Outlet","axios","API_KEY","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","moviesSearch","_ref2","_callee2","query","_context2","_x","_ref3","_callee3","_context3","_x2","movieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}